package main

/*
 Six910 is a shopping cart and E-commerce system.
 Copyright (C) 2020 Ulbora Labs LLC. (www.ulboralabs.com)
 All rights reserved.

 Copyright (C) 2020 Ken Williamson
 All rights reserved.

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

import (
	"fmt"
	"net/http"
	"os"
	"strconv"

	px "github.com/Ulbora/GoProxy"
	lg "github.com/Ulbora/Level_Logger"

	hand "github.com/Ulbora/Six910/handlers"
	man "github.com/Ulbora/Six910/managers"
	db "github.com/Ulbora/dbinterface"
	mdb "github.com/Ulbora/dbinterface_mysql"
	sixmdb "github.com/Ulbora/six910-mysql"
	"github.com/gorilla/mux"

	jv "github.com/Ulbora/GoAuth2JwtValidator"

	_ "github.com/Ulbora/Six910/docs" // docs is generated by Swag CLI, you have to import it.

	httpSwagger "github.com/swaggo/http-swagger"
)

// @title Six910 API
// @version 1.0
// @description This is the Six910 (six nine ten) API
// @termsOfService https://github.com/Ulbora/Six910/blob/master/tos.html
// @contact.name API Support
// @contact.url http://www.ulboralabs.com/contact/form
// @license.name GPL-3.0
// @license.url https://github.com/Ulbora/Six910/blob/master/LICENSE
// @host localhost:3002
// @BasePath /
func main() {

	var mydb mdb.MyDB
	var proxy px.GoProxy
	var dbHost string
	var dbUser string
	var dbPassword string
	var dbName string

	var apiKey string

	var userHost string

	var l lg.Logger
	l.LogLevel = lg.AllLevel

	if os.Getenv("SIX910_DB_HOST") != "" {
		dbHost = os.Getenv("SIX910_DB_HOST")
	} else {
		dbHost = "localhost:3306"
	}

	if os.Getenv("SIX910_DB_USER") != "" {
		dbUser = os.Getenv("SIX910_DB_USER")
	} else {
		dbUser = "admin"
	}

	if os.Getenv("SIX910_DB_PASSWORD") != "" {
		dbPassword = os.Getenv("SIX910_DB_PASSWORD")
	} else {
		dbPassword = "admin"
	}

	if os.Getenv("SIX910_DB_DATABASE") != "" {
		dbName = os.Getenv("SIX910_DB_DATABASE")
	} else {
		dbName = "six910"
	}

	if os.Getenv("SIX910_USER_HOST") != "" {
		userHost = os.Getenv("SIX910_USER_HOST")
	} else {
		userHost = "http://localhost:3001"
	}

	if os.Getenv("SIX910_API_KEY") != "" {
		apiKey = os.Getenv("SIX910_API_KEY")
	} else {
		apiKey = "GDG651GFD66FD16151sss651f651ff65555ddfhjklyy5"
	}

	mydb.Host = dbHost         // "localhost:3306"
	mydb.User = dbUser         // "admin"
	mydb.Password = dbPassword // "admin"
	mydb.Database = dbName     // "six910"
	var dbi db.Database = &mydb

	var sdb sixmdb.Six910Mysql
	//var l lg.Logger
	l.LogLevel = lg.AllLevel
	sdb.Log = &l
	sdb.DB = dbi
	dbi.Connect()

	var sm man.Six910Manager
	sm.Db = sdb.GetNew()
	sm.Log = &l
	sm.Proxy = proxy.GetNewProxy()
	sm.UserHost = userHost

	var sh hand.Six910Handler
	sh.Manager = sm.GetNew()
	sh.APIKey = apiKey
	sh.Log = &l

	var mc jv.MockOauthClient
	//mc.MockValidate = true
	sh.ValidatorClient = mc.GetNewClient()

	router := mux.NewRouter()
	port := "3002"
	envPort := os.Getenv("PORT")
	if envPort != "" {
		portInt, _ := strconv.Atoi(envPort)
		if portInt != 0 {
			port = envPort
		}
	}

	h := sh.GetNew()

	//sdb.MockAddStoreSuccess = true
	//sdb.MockStoreID = 5

	//h := sh.GetNew()

	var locacc man.LocalStoreAdminUser
	locacc.Username = "admin"
	locacc.Password = "admin"

	lstoreRes := sm.CreateLocalStore(&locacc)
	sm.Log.Debug("Creating local store", *lstoreRes)

	//store
	router.HandleFunc("/rs/store/add", h.AddStore).Methods("POST")
	router.HandleFunc("/rs/store/update", h.UpdateStore).Methods("PUT")
	router.HandleFunc("/rs/store/get/{storeName}/{localDomain}", h.GetStore).Methods("GET")
	router.HandleFunc("/rs/store/delete/{storeName}/{localDomain}", h.DeleteStore).Methods("DELETE")

	//customer
	router.HandleFunc("/rs/customer/add", h.AddCustomer).Methods("POST")
	router.HandleFunc("/rs/customer/update", h.UpdateCustomer).Methods("PUT")
	router.HandleFunc("/rs/customer/get/email/{email}/{storeId}", h.GetCustomer).Methods("GET")
	router.HandleFunc("/rs/customer/get/id/{id}/{storeId}", h.GetCustomerID).Methods("GET")
	router.HandleFunc("/rs/customer/get/list/{storeId}", h.GetCustomerList).Methods("GET")
	router.HandleFunc("/rs/customer/delete/{id}/{storeId}", h.DeleteCustomer).Methods("DELETE")

	//users
	router.HandleFunc("/rs/user/add", h.AddUser).Methods("POST")
	router.HandleFunc("/rs/user/update", h.UpdateUser).Methods("PUT")
	router.HandleFunc("/rs/user/{username}/{storeId}", h.GetUser).Methods("GET")

	router.HandleFunc("/rs/user/get/admin/list/{storeId}", h.GetAdminUserList).Methods("GET")
	router.HandleFunc("/rs/user/get/customer/list/{storeId}", h.GetCustomerUserList).Methods("GET")

	//distributors
	router.HandleFunc("/rs/distributor/add", h.AddDistributor).Methods("POST")
	router.HandleFunc("/rs/distributor/update", h.UpdateDistributor).Methods("PUT")
	router.HandleFunc("/rs/distributor/get/id/{id}/{storeId}", h.GetDistributor).Methods("GET")
	router.HandleFunc("/rs/distributor/get/list/{storeId}", h.GetDistributorList).Methods("GET")
	router.HandleFunc("/rs/distributor/delete/{id}/{storeId}", h.DeleteDistributor).Methods("DELETE")

	//cart
	router.HandleFunc("/rs/cart/add", h.AddCart).Methods("POST")
	router.HandleFunc("/rs/cart/update", h.UpdateCart).Methods("PUT")
	router.HandleFunc("/rs/cart/get/{cid}/{storeId}", h.GetCart).Methods("GET")
	router.HandleFunc("/rs/cart/delete/{id}/{cid}/{storeId}", h.DeleteCart).Methods("DELETE")

	//cartItem
	router.HandleFunc("/rs/cartItem/add", h.AddCartItem).Methods("POST")
	router.HandleFunc("/rs/cartItem/update", h.UpdateCartItem).Methods("PUT")
	router.HandleFunc("/rs/cartItem/get/{cid}/{prodId}/{storeId}", h.GetCartItem).Methods("GET")
	router.HandleFunc("/rs/cartItem/get/list/{cartId}/{cid}/{storeId}", h.GetCartItemList).Methods("GET")
	router.HandleFunc("/rs/cartItem/delete/{id}/{prodId}/{cartId}", h.DeleteCartItem).Methods("DELETE")

	//address
	router.HandleFunc("/rs/address/add", h.AddAddress).Methods("POST")
	router.HandleFunc("/rs/address/update", h.UpdateAddress).Methods("PUT")
	router.HandleFunc("/rs/address/get/id/{id}/{cid}/{storeId}", h.GetAddress).Methods("GET")
	router.HandleFunc("/rs/address/get/list/{cid}/{storeId}", h.GetAddressList).Methods("GET")
	router.HandleFunc("/rs/address/delete/{id}/{cid}/{storeId}", h.DeleteAddress).Methods("DELETE")

	//category
	router.HandleFunc("/rs/category/add", h.AddCategory).Methods("POST")
	router.HandleFunc("/rs/category/update", h.UpdateCategory).Methods("PUT")
	router.HandleFunc("/rs/category/get/id/{id}/{storeId}", h.GetCategory).Methods("GET")
	router.HandleFunc("/rs/category/get/list/{storeId}", h.GetCategoryList).Methods("GET")
	router.HandleFunc("/rs/category/get/sub/list/{catId}", h.GetSubCategoryList).Methods("GET")
	router.HandleFunc("/rs/category/delete/{id}/{storeId}", h.DeleteCategory).Methods("DELETE")

	//shipping method
	router.HandleFunc("/rs/shippingMethod/add", h.AddShippingMethod).Methods("POST")
	router.HandleFunc("/rs/shippingMethod/update", h.UpdateShippingMethod).Methods("PUT")
	router.HandleFunc("/rs/shippingMethod/get/id/{id}/{storeId}", h.GetShippingMethod).Methods("GET")
	router.HandleFunc("/rs/shippingMethod/get/list/{storeId}", h.GetShippingMethodList).Methods("GET")
	router.HandleFunc("/rs/shippingMethod/delete/{id}/{storeId}", h.DeleteShippingMethod).Methods("DELETE")

	//...
	//...

	//product
	router.HandleFunc("/rs/product/add", h.AddProduct).Methods("POST")
	router.HandleFunc("/rs/product/update", h.UpdateProduct).Methods("PUT")
	router.HandleFunc("/rs/product/get/id/{id}/{storeId}", h.GetProductByID).Methods("GET")
	router.HandleFunc("/rs/product/get/name/{name}/{storeId}/{start}/{end}", h.GetProductsByName).Methods("GET")
	router.HandleFunc("/rs/product/get/category/{catId}/{storeId}/{start}/{end}", h.GetProductsByCaterory).Methods("GET")
	router.HandleFunc("/rs/product/get/list/{storeId}/{start}/{end}", h.GetProductList).Methods("GET")
	router.HandleFunc("/rs/product/delete/{id}/{storeId}", h.DeleteProduct).Methods("DELETE")

	//Geographic Regions

	//...
	//...

	//productCategory
	router.HandleFunc("/rs/productCategory/add", h.AddProductCategory).Methods("POST")
	router.HandleFunc("/rs/productCategory/delete/{categoryId}/{productId}/{storeId}", h.DeleteProductCategory).Methods("DELETE")

	//....
	//....

	//store shipment carrier like UPS and FEDex

	//....

	fmt.Println("Six910 (six nine ten) server is running on port " + port + "!")

	// Swagger
	router.PathPrefix("/swagger").Handler(httpSwagger.WrapHandler)

	http.ListenAndServe(":"+port, router)
}

// go mod init github.com/Ulbora/Six910
